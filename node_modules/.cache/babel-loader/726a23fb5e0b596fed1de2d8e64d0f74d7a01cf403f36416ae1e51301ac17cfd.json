{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Dev/RouteOptimizationVisualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport Select from \"react-select\";\nimport ReactSlider from \"react-slider\";\nimport sketch from \"./sketch.js\";\nimport playButton from './icons8-spielen-100.png';\nimport pauseButton from './icons8-stop-100.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_SPEED = 5;\nconst MAX_SPEED = 50;\nconst algoOptions = [{\n  value: \"0\",\n  label: \"Select Algorithm\"\n}, {\n  value: \"1\",\n  label: \"Nearest Insertion\"\n}, {\n  value: \"2\",\n  label: \"Farthest Insertion\"\n}, {\n  value: \"3\",\n  label: \"Nearest Neighbor\"\n}, {\n  value: \"4\",\n  label: \"Nearest Neighbor Look Ahead (made up)\"\n}, {\n  value: \"5\",\n  label: \"Brute Force\"\n}, {\n  value: \"7\",\n  label: \"Christofides\"\n}];\nconst localSearchOptions = [{\n  value: \"0\",\n  label: \"Select Algorithm\"\n}, {\n  value: \"1\",\n  label: \"2-opt\"\n}, {\n  value: \"2\",\n  label: \"3-opt\"\n}];\nexport function App() {\n  _s();\n  const [addingNodes, setAddingNodes] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [clearingBoard, setClearingBoard] = useState(false);\n  const [algo, setAlgo] = useState(\"Not Selected\");\n  const [localSearch, setLocalSearch] = useState(\"Not Selected\");\n  const [speed, setSpeed] = useState(INITIAL_SPEED);\n  const [pathToPic, setPathToPic] = useState(playButton);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [runAlgoText, setRunAlgoText] = useState(\"Run Algorithm\");\n  const [localSearchText, setLocalSearchText] = useState(\"Run Algorithm\");\n  const [removeEdges, setRemoveEdges] = useState(false);\n  const [algoHasRun, setAlgoHasRun] = useState(false);\n\n  // Helper function for delayed operations\n  const delay = time => new Promise(resolve => setTimeout(resolve, time / speed));\n  const handleAlgoSelect = e => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setAlgo(e.label);\n    setAlgoHasRun(false);\n  };\n  const handleLocalSearchSelect = e => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setLocalSearch(e.label);\n  };\n  const handleSpeedSelect = value => {\n    setIsRunning(false);\n    setSpeed(value);\n  };\n  const handleSetIsPlaying = bool => {\n    setIsPlaying(bool);\n    setPathToPic(bool ? pauseButton : playButton);\n  };\n  const handleRunAlgoButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    if (runAlgoText === \"Run Algorithm\") {\n      setRemoveEdges(false);\n      setIsRunning(true);\n      setRunAlgoText(\"Remove Edges\");\n      setLocalSearchText(\"Run local search\");\n      setPathToPic(pauseButton);\n      setAlgoHasRun(true);\n    } else {\n      setPathToPic(playButton);\n      setRemoveEdges(true);\n      setIsRunning(false);\n      setRunAlgoText(\"Run Algorithm\");\n      setLocalSearchText(\"Run Algorithm\");\n      setAlgoHasRun(false);\n    }\n    await delay(500);\n    setIsRunning(false);\n  };\n  const handleLocalSearchButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    setRemoveEdges(false);\n    setIsRunning(true);\n    setPathToPic(pauseButton);\n    if (localSearchText === \"Run Algorithm\") {\n      setLocalSearchText(\"Run local search\");\n    }\n    if (runAlgoText === \"Run Algorithm\") {\n      setRunAlgoText(\"Remove Edges\");\n    }\n    await delay(500);\n    setIsRunning(false);\n  };\n  const handlePlayPauseButton = async () => {\n    if (isRunning) {\n      // If algorithm is running, just toggle play/pause\n      handleSetIsPlaying(!isPlaying);\n      return;\n    }\n\n    // If an algorithm is selected but hasn't run yet, run it\n    if (algo !== \"Not Selected\" && algo !== \"Select Algorithm\" && !algoHasRun) {\n      await handleRunAlgoButton();\n      return;\n    }\n\n    // If algorithm has run and local search is selected, run local search\n    if (algoHasRun && localSearch !== \"Not Selected\" && localSearch !== \"Select Algorithm\") {\n      await handleLocalSearchButton();\n      return;\n    }\n\n    // Otherwise just toggle play/pause state\n    handleSetIsPlaying(!isPlaying);\n  };\n  const handleAddNodesButton = () => {\n    setAddingNodes(!addingNodes);\n    setIsRunning(false);\n    setClearingBoard(false);\n  };\n\n  // Initialize board\n  const addNodesButtonRef = useRef();\n  useEffect(() => {\n    const button = addNodesButtonRef.current;\n    button.click();\n    const timer = setTimeout(() => button.click(), 3);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Route Optimization Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown\",\n        options: algoOptions,\n        onChange: handleAlgoSelect,\n        defaultValue: {\n          label: \"Select Algorithm\",\n          value: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown\",\n        options: localSearchOptions,\n        onChange: handleLocalSearchSelect,\n        defaultValue: {\n          label: \"Select Algorithm\",\n          value: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"slider-label\",\n        children: \"Choose speed by sliding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: \"slider\",\n        ariaLabelledby: \"slider-label\",\n        thumbClassName: \"example-thumb\",\n        trackClassName: \"example-track\",\n        max: MAX_SPEED,\n        renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...props,\n          children: state.valueNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 42\n        }, this),\n        defaultValue: INITIAL_SPEED,\n        onChange: handleSpeedSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Canvas\",\n        children: /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n          sketch: sketch,\n          addingNodes: addingNodes,\n          isRunning: isRunning,\n          clearinBoard: clearingBoard,\n          algo: algo,\n          speed: speed,\n          removeEdges: removeEdges,\n          localSearch: localSearch,\n          isPlaying: isPlaying,\n          setIsPlaying: handleSetIsPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: addNodesButtonRef,\n        className: \"RunButton\",\n        onClick: handleAddNodesButton,\n        children: addingNodes ? 'Stop adding Nodes' : 'Add Nodes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunButton\",\n        onClick: handleRunAlgoButton,\n        children: runAlgoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunButton\",\n        onClick: handleLocalSearchButton,\n        children: localSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunButton\",\n        onClick: () => {\n          setAddingNodes(false);\n          setIsRunning(false);\n          setClearingBoard(!clearingBoard);\n        },\n        children: \"Clear Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"image\",\n        src: pathToPic,\n        className: \"PlayButton\",\n        onClick: handlePlayPauseButton,\n        alt: \"Play/Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Yn77U7jNEGlnmvh5+7YfwmEV4lc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactP5Wrapper","Select","ReactSlider","sketch","playButton","pauseButton","INITIAL_SPEED","MAX_SPEED","algoOptions","value","label","localSearchOptions","App","addingNodes","setAddingNodes","isRunning","setIsRunning","clearingBoard","setClearingBoard","algo","setAlgo","localSearch","setLocalSearch","speed","setSpeed","pathToPic","setPathToPic","isPlaying","setIsPlaying","runAlgoText","setRunAlgoText","localSearchText","setLocalSearchText","removeEdges","setRemoveEdges","algoHasRun","setAlgoHasRun","delay","time","Promise","resolve","setTimeout","handleAlgoSelect","e","handleLocalSearchSelect","handleSpeedSelect","handleSetIsPlaying","bool","handleRunAlgoButton","handleLocalSearchButton","handlePlayPauseButton","handleAddNodesButton","addNodesButtonRef","button","current","click","timer","clearTimeout","props","state","valueNow"],"sources":["/home/thomas/Dev/RouteOptimizationVisualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport Select from \"react-select\";\nimport ReactSlider from \"react-slider\";\nimport sketch from \"./sketch.js\";\nimport playButton from './icons8-spielen-100.png';\nimport pauseButton from './icons8-stop-100.png';\nimport './App.css';\n\nconst INITIAL_SPEED = 5;\nconst MAX_SPEED = 50;\n\nconst algoOptions = [\n  { value: \"0\", label: \"Select Algorithm\" },\n  { value: \"1\", label: \"Nearest Insertion\" },\n  { value: \"2\", label: \"Farthest Insertion\" },\n  { value: \"3\", label: \"Nearest Neighbor\" },\n  { value: \"4\", label: \"Nearest Neighbor Look Ahead (made up)\" },\n  { value: \"5\", label: \"Brute Force\" },\n  { value: \"7\", label: \"Christofides\" }\n];\n\nconst localSearchOptions = [\n  { value: \"0\", label: \"Select Algorithm\" },\n  { value: \"1\", label: \"2-opt\" },\n  { value: \"2\", label: \"3-opt\" }\n];\n\nexport function App() {\n  const [addingNodes, setAddingNodes] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [clearingBoard, setClearingBoard] = useState(false);\n  const [algo, setAlgo] = useState(\"Not Selected\");\n  const [localSearch, setLocalSearch] = useState(\"Not Selected\");\n  const [speed, setSpeed] = useState(INITIAL_SPEED);\n  const [pathToPic, setPathToPic] = useState(playButton);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [runAlgoText, setRunAlgoText] = useState(\"Run Algorithm\");\n  const [localSearchText, setLocalSearchText] = useState(\"Run Algorithm\");\n  const [removeEdges, setRemoveEdges] = useState(false);\n  const [algoHasRun, setAlgoHasRun] = useState(false);\n\n  // Helper function for delayed operations\n  const delay = (time) => new Promise(resolve => setTimeout(resolve, time / speed));\n\n  const handleAlgoSelect = (e) => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setAlgo(e.label);\n    setAlgoHasRun(false);\n  };\n\n  const handleLocalSearchSelect = (e) => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setLocalSearch(e.label);\n  };\n\n  const handleSpeedSelect = (value) => {\n    setIsRunning(false);\n    setSpeed(value);\n  };\n\n  const handleSetIsPlaying = (bool) => {\n    setIsPlaying(bool);\n    setPathToPic(bool ? pauseButton : playButton);\n  };\n\n  const handleRunAlgoButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    \n    if (runAlgoText === \"Run Algorithm\") {\n      setRemoveEdges(false);\n      setIsRunning(true);\n      setRunAlgoText(\"Remove Edges\");\n      setLocalSearchText(\"Run local search\");\n      setPathToPic(pauseButton);\n      setAlgoHasRun(true);\n    } else {\n      setPathToPic(playButton);\n      setRemoveEdges(true);\n      setIsRunning(false);\n      setRunAlgoText(\"Run Algorithm\");\n      setLocalSearchText(\"Run Algorithm\");\n      setAlgoHasRun(false);\n    }\n\n    await delay(500);\n    setIsRunning(false);\n  };\n\n  const handleLocalSearchButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    setRemoveEdges(false);\n    setIsRunning(true);\n    setPathToPic(pauseButton);\n    \n    if (localSearchText === \"Run Algorithm\") {\n      setLocalSearchText(\"Run local search\");\n    }\n    if (runAlgoText === \"Run Algorithm\") {\n      setRunAlgoText(\"Remove Edges\");\n    }\n\n    await delay(500);\n    setIsRunning(false);\n  };\n\n  const handlePlayPauseButton = async () => {\n    if (isRunning) {\n      // If algorithm is running, just toggle play/pause\n      handleSetIsPlaying(!isPlaying);\n      return;\n    }\n\n    // If an algorithm is selected but hasn't run yet, run it\n    if (algo !== \"Not Selected\" && algo !== \"Select Algorithm\" && !algoHasRun) {\n      await handleRunAlgoButton();\n      return;\n    }\n\n    // If algorithm has run and local search is selected, run local search\n    if (algoHasRun && localSearch !== \"Not Selected\" && localSearch !== \"Select Algorithm\") {\n      await handleLocalSearchButton();\n      return;\n    }\n\n    // Otherwise just toggle play/pause state\n    handleSetIsPlaying(!isPlaying);\n  };\n\n  const handleAddNodesButton = () => {\n    setAddingNodes(!addingNodes);\n    setIsRunning(false);\n    setClearingBoard(false);\n  };\n\n  // Initialize board\n  const addNodesButtonRef = useRef();\n  useEffect(() => {\n    const button = addNodesButtonRef.current;\n    button.click();\n    const timer = setTimeout(() => button.click(), 3);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <>\n      <header className=\"banner\">\n        <div className=\"banner__container\">\n          <h1>Route Optimization Visualizer</h1>\n        </div>\n      </header>\n\n      <div className=\"dropdownContainer\">\n        <Select\n          className=\"dropdown\"\n          options={algoOptions}\n          onChange={handleAlgoSelect}\n          defaultValue={{ label: \"Select Algorithm\", value: 0 }}\n        />\n      </div>\n\n      <div className=\"dropdownContainer\">\n        <Select\n          className=\"dropdown\"\n          options={localSearchOptions}\n          onChange={handleLocalSearchSelect}\n          defaultValue={{ label: \"Select Algorithm\", value: 0 }}\n        />\n      </div>\n\n      <div className=\"sliderContainer\">\n        <label id=\"slider-label\">Choose speed by sliding</label>\n        <ReactSlider\n          className=\"slider\"\n          ariaLabelledby=\"slider-label\"\n          thumbClassName=\"example-thumb\"\n          trackClassName=\"example-track\"\n          max={MAX_SPEED}\n          renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n          defaultValue={INITIAL_SPEED}\n          onChange={handleSpeedSelect}\n        />\n      </div>\n\n      <main className=\"Main\">\n        <div className=\"Canvas\">\n          <ReactP5Wrapper\n            sketch={sketch}\n            addingNodes={addingNodes}\n            isRunning={isRunning}\n            clearinBoard={clearingBoard}\n            algo={algo}\n            speed={speed}\n            removeEdges={removeEdges}\n            localSearch={localSearch}\n            isPlaying={isPlaying}\n            setIsPlaying={handleSetIsPlaying}\n          />\n        </div>\n      </main>\n\n      <div className=\"Buttons\">\n        <button\n          ref={addNodesButtonRef}\n          className=\"RunButton\"\n          onClick={handleAddNodesButton}\n        >\n          {addingNodes ? 'Stop adding Nodes' : 'Add Nodes'}\n        </button>\n        <button\n          className=\"RunButton\"\n          onClick={handleRunAlgoButton}\n        >\n          {runAlgoText}\n        </button>\n        <button\n          className=\"RunButton\"\n          onClick={handleLocalSearchButton}\n        >\n          {localSearchText}\n        </button>\n        <button\n          className=\"RunButton\"\n          onClick={() => {\n            setAddingNodes(false);\n            setIsRunning(false);\n            setClearingBoard(!clearingBoard);\n          }}\n        >\n          Clear Board\n        </button>\n        <input\n          type=\"image\"\n          src={pathToPic}\n          className=\"PlayButton\"\n          onClick={handlePlayPauseButton}\n          alt=\"Play/Pause\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
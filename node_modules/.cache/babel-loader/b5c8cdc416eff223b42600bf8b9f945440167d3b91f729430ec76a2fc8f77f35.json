{"ast":null,"code":"import _classCallCheck from\"/home/thomas/Dev/RouteOptimizationVisualizer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/thomas/Dev/RouteOptimizationVisualizer/node_modules/@babel/runtime/helpers/esm/createClass.js\";export var Edmonds=/*#__PURE__*/function(){function Edmonds(edges){_classCallCheck(this,Edmonds);this.maxWeightMatching=function(){for(var t=0;t<this.nVertex;t++){//console.log('DEBUG: STAGE ' + t);\nthis.label=this.filledArray(2*this.nVertex,0);this.bestEdge=this.filledArray(2*this.nVertex,-1);this.blossomBestEdges=this.initArrArr(2*this.nVertex);this.allowEdge=this.filledArray(this.nEdge,false);this.queue=[];for(var v=0;v<this.nVertex;v++){if(this.mate[v]===-1&&this.label[this.inBlossom[v]]===0){this.assignLabel(v,1,-1);}}var augmented=false;while(true){//console.log('DEBUG: SUBSTAGE');\nwhile(this.queue.length>0&&!augmented){v=this.queue.pop();//console.log('DEBUG: POP ', 'v=' + v);\n//console.assert(this.label[this.inBlossom[v]] == 1);\nfor(var ii=0;ii<this.neighbend[v].length;ii++){var p=this.neighbend[v][ii];var k=~~(p/2);var w=this.endpoint[p];if(this.inBlossom[v]===this.inBlossom[w])continue;if(!this.allowEdge[k]){var kSlack=this.slack(k);if(kSlack<=0){this.allowEdge[k]=true;}}if(this.allowEdge[k]){if(this.label[this.inBlossom[w]]===0){this.assignLabel(w,2,p^1);}else if(this.label[this.inBlossom[w]]===1){var base=this.scanBlossom(v,w);if(base>=0){this.addBlossom(base,k);}else{this.augmentMatching(k);augmented=true;break;}}else if(this.label[w]===0){//console.assert(this.label[this.inBlossom[w]] === 2);\nthis.label[w]=2;this.labelEnd[w]=p^1;}}else if(this.label[this.inBlossom[w]]===1){var b=this.inBlossom[v];if(this.bestEdge[b]===-1||kSlack<this.slack(this.bestEdge[b])){this.bestEdge[b]=k;}}else if(this.label[w]===0){if(this.bestEdge[w]===-1||kSlack<this.slack(this.bestEdge[w])){this.bestEdge[w]=k;}}}}if(augmented)break;var deltaType=-1;var delta=[];var deltaEdge=[];var deltaBlossom=[];for(v=0;v<this.nVertex;v++){if(this.label[this.inBlossom[v]]===0&&this.bestEdge[v]!==-1){var d=this.slack(this.bestEdge[v]);if(deltaType===-1||d<delta){delta=d;deltaType=2;deltaEdge=this.bestEdge[v];}}}for(b=0;b<2*this.nVertex;b++){if(this.blossomParent[b]===-1&&this.label[b]===1&&this.bestEdge[b]!==-1){kSlack=this.slack(this.bestEdge[b]);////console.assert((kSlack % 2) == 0);\nd=kSlack/2;if(deltaType===-1||d<delta){delta=d;deltaType=3;deltaEdge=this.bestEdge[b];}}}for(b=this.nVertex;b<this.nVertex*2;b++){if(this.blossomBase[b]>=0&&this.blossomParent[b]===-1&&this.label[b]===2&&(deltaType===-1||this.dualVar[b]<delta)){delta=this.dualVar[b];deltaType=4;deltaBlossom=b;}}if(deltaType===-1){deltaType=1;delta=Math.max(0,this.getMin(this.dualVar,0,this.nVertex-1));}for(v=0;v<this.nVertex;v++){var curLabel=this.label[this.inBlossom[v]];if(curLabel===1){this.dualVar[v]-=delta;}else if(curLabel===2){this.dualVar[v]+=delta;}}for(b=this.nVertex;b<this.nVertex*2;b++){if(this.blossomBase[b]>=0&&this.blossomParent[b]===-1){if(this.label[b]===1){this.dualVar[b]+=delta;}else if(this.label[b]===2){this.dualVar[b]-=delta;}}}//console.log('DEBUG: deltaType', deltaType, ' delta: ', delta);\nif(deltaType===1){break;}else if(deltaType===2){this.allowEdge[deltaEdge]=true;var i=this.edges[deltaEdge][0];var j=this.edges[deltaEdge][1];var wt=this.edges[deltaEdge][2];if(this.label[this.inBlossom[i]]===0){i=i^j;j=j^i;i=i^j;}//console.assert(this.label[this.inBlossom[i]] == 1);\nthis.queue.push(i);}else if(deltaType===3){this.allowEdge[deltaEdge]=true;i=this.edges[deltaEdge][0];j=this.edges[deltaEdge][1];wt=this.edges[deltaEdge][2];//console.assert(this.label[this.inBlossom[i]] == 1);\nthis.queue.push(i);}else if(deltaType===4){this.expandBlossom(deltaBlossom,false);}}if(!augmented)break;for(b=this.nVertex;b<this.nVertex*2;b++){if(this.blossomParent[b]===-1&&this.blossomBase[b]>=0&&this.label[b]===1&&this.dualVar[b]===0){this.expandBlossom(b,true);}}}for(v=0;v<this.nVertex;v++){if(this.mate[v]>=0){this.mate[v]=this.endpoint[this.mate[v]];}}for(v=0;v<this.nVertex;v++){//console.assert(this.mate[v] == -1 || this.mate[this.mate[v]] == v);\n}return this.mate;};this.slack=function(k){var i=this.edges[k][0];var j=this.edges[k][1];var wt=this.edges[k][2];return this.dualVar[i]+this.dualVar[j]-2*wt;};this.blossomLeaves=function(b){if(b<this.nVertex){return[b];}var leaves=[];var childList=this.blossomChilds[b];for(var t=0;t<childList.length;t++){if(childList[t]<=this.nVertex){leaves.push(childList[t]);}else{var leafList=this.blossomLeaves(childList[t]);for(var v=0;v<leafList.length;v++){leaves.push(leafList[v]);}}}return leaves;};this.assignLabel=function(w,t,p){//console.log('DEBUG: assignLabel(' + w + ',' + t + ',' + p + '}');\nvar b=this.inBlossom[w];//console.assert(this.label[w] === 0 && this.label[b] === 0);\nthis.label[w]=this.label[b]=t;this.labelEnd[w]=this.labelEnd[b]=p;this.bestEdge[w]=this.bestEdge[b]=-1;if(t===1){this.queue.push.apply(this.queue,this.blossomLeaves(b));//console.log('DEBUG: PUSH ' + this.blossomLeaves(b).toString());\n}else if(t===2){var base=this.blossomBase[b];//console.assert(this.mate[base] >= 0);\nthis.assignLabel(this.endpoint[this.mate[base]],1,this.mate[base]^1);}};this.scanBlossom=function(v,w){//console.log('DEBUG: scanBlossom(' + v + ',' + w + ')');\nvar path=[];var base=-1;while(v!==-1||w!==-1){var b=this.inBlossom[v];if(this.label[b]&4){base=this.blossomBase[b];break;}//console.assert(this.label[b] === 1);\npath.push(b);this.label[b]=5;//console.assert(this.labelEnd[b] === this.mate[this.blossomBase[b]]);\nif(this.labelEnd[b]===-1){v=-1;}else{v=this.endpoint[this.labelEnd[b]];b=this.inBlossom[v];//console.assert(this.label[b] === 2);\n//console.assert(this.labelEnd[b] >= 0);\nv=this.endpoint[this.labelEnd[b]];}if(w!==-1){v=v^w;w=w^v;v=v^w;}}for(var ii=0;ii<path.length;ii++){b=path[ii];this.label[b]=1;}return base;};this.addBlossom=function(base,k){var v=this.edges[k][0];var w=this.edges[k][1];var wt=this.edges[k][2];var bb=this.inBlossom[base];var bv=this.inBlossom[v];var bw=this.inBlossom[w];var b=this.unusedBlossoms.pop();//console.log('DEBUG: addBlossom(' + base + ',' + k + ')' + ' (v=' + v + ' w=' + w + ')' + ' -> ' + b);\nthis.blossomBase[b]=base;this.blossomParent[b]=-1;this.blossomParent[bb]=b;var path=this.blossomChilds[b]=[];var endPs=this.blossomEndPs[b]=[];while(bv!==bb){this.blossomParent[bv]=b;path.push(bv);endPs.push(this.labelEnd[bv]);//console.assert(this.label[bv] === 2 || (this.label[bv] === 1 && this.labelEnd[bv] === this.mate[this.blossomBase[bv]]));\n//console.assert(this.labelEnd[bv] >= 0);\nv=this.endpoint[this.labelEnd[bv]];bv=this.inBlossom[v];}path.push(bb);path.reverse();endPs.reverse();endPs.push(2*k);while(bw!==bb){this.blossomParent[bw]=b;path.push(bw);endPs.push(this.labelEnd[bw]^1);//console.assert(this.label[bw] === 2 || (this.label[bw] === 1 && this.labelEnd[bw] === this.mate[this.blossomBase[bw]]));\n//console.assert(this.labelEnd[bw] >= 0);\nw=this.endpoint[this.labelEnd[bw]];bw=this.inBlossom[w];}//console.assert(this.label[bb] === 1);\nthis.label[b]=1;this.labelEnd[b]=this.labelEnd[bb];this.dualVar[b]=0;var leaves=this.blossomLeaves(b);for(var ii=0;ii<leaves.length;ii++){v=leaves[ii];if(this.label[this.inBlossom[v]]===2){this.queue.push(v);}this.inBlossom[v]=b;}var bestEdgeTo=this.filledArray(2*this.nVertex,-1);for(ii=0;ii<path.length;ii++){bv=path[ii];if(this.blossomBestEdges[bv].length===0){var nbLists=[];leaves=this.blossomLeaves(bv);for(var x=0;x<leaves.length;x++){v=leaves[x];nbLists[x]=[];for(var y=0;y<this.neighbend[v].length;y++){var p=this.neighbend[v][y];nbLists[x].push(~~(p/2));}}}else{nbLists=[this.blossomBestEdges[bv]];}//console.log('DEBUG: nbLists ' + nbLists.toString());\nfor(x=0;x<nbLists.length;x++){var nbList=nbLists[x];for(y=0;y<nbList.length;y++){k=nbList[y];var i=this.edges[k][0];var j=this.edges[k][1];wt=this.edges[k][2];if(this.inBlossom[j]===b){i=i^j;j=j^i;i=i^j;}var bj=this.inBlossom[j];if(bj!==b&&this.label[bj]===1&&(bestEdgeTo[bj]===-1||this.slack(k)<this.slack(bestEdgeTo[bj]))){bestEdgeTo[bj]=k;}}}this.blossomBestEdges[bv]=[];this.bestEdge[bv]=-1;}var be=[];for(ii=0;ii<bestEdgeTo.length;ii++){k=bestEdgeTo[ii];if(k!==-1){be.push(k);}}this.blossomBestEdges[b]=be;//console.log('DEBUG: blossomBestEdges[' + b + ']= ' + this.blossomBestEdges[b].toString());\nthis.bestEdge[b]=-1;for(ii=0;ii<this.blossomBestEdges[b].length;ii++){k=this.blossomBestEdges[b][ii];if(this.bestEdge[b]===-1||this.slack(k)<this.slack(this.bestEdge[b])){this.bestEdge[b]=k;}}//console.log('DEBUG: blossomChilds[' + b + ']= ' + this.blossomChilds[b].toString());\n};this.expandBlossom=function(b,endStage){//console.log('DEBUG: expandBlossom(' + b + ',' + endStage + ') ' + this.blossomChilds[b].toString());\nfor(var ii=0;ii<this.blossomChilds[b].length;ii++){var s=this.blossomChilds[b][ii];this.blossomParent[s]=-1;if(s<this.nVertex){this.inBlossom[s]=s;}else if(endStage&&this.dualVar[s]===0){this.expandBlossom(s,endStage);}else{var leaves=this.blossomLeaves(s);for(var jj=0;jj<leaves.length;jj++){var v=leaves[jj];this.inBlossom[v]=s;}}}if(!endStage&&this.label[b]===2){//console.assert(this.labelEnd[b] >= 0);\nvar entryChild=this.inBlossom[this.endpoint[this.labelEnd[b]^1]];var j=this.blossomChilds[b].indexOf(entryChild);if(j&1){j-=this.blossomChilds[b].length;var jStep=1;var endpTrick=0;}else{jStep=-1;endpTrick=1;}var p=this.labelEnd[b];while(j!==0){this.label[this.endpoint[p^1]]=0;this.label[this.endpoint[this.indexW(this.blossomEndPs[b],j-endpTrick)^endpTrick^1]]=0;this.assignLabel(this.endpoint[p^1],2,p);this.allowEdge[~~(this.indexW(this.blossomEndPs[b],j-endpTrick)/2)]=true;j+=jStep;p=this.indexW(this.blossomEndPs[b],j-endpTrick)^endpTrick;this.allowEdge[~~(p/2)]=true;j+=jStep;}var bv=this.indexW(this.blossomChilds[b],j);this.label[this.endpoint[p^1]]=this.label[bv]=2;this.labelEnd[this.endpoint[p^1]]=this.labelEnd[bv]=p;this.bestEdge[bv]=-1;j+=jStep;while(this.indexW(this.blossomChilds[b],j)!==entryChild){bv=this.indexW(this.blossomChilds[b],j);if(this.label[bv]===1){j+=jStep;continue;}leaves=this.blossomLeaves(bv);for(ii=0;ii<leaves.length;ii++){v=leaves[ii];if(this.label[v]!==0)break;}if(this.label[v]!==0){//console.assert(this.label[v] === 2);\n//console.assert(this.inBlossom[v] === bv);\nthis.label[v]=0;this.label[this.endpoint[this.mate[this.blossomBase[bv]]]]=0;this.assignLabel(v,2,this.labelEnd[v]);}j+=jStep;}}this.label[b]=this.labelEnd[b]=-1;this.blossomEndPs[b]=this.blossomChilds[b]=[];this.blossomBase[b]=-1;this.blossomBestEdges[b]=[];this.bestEdge[b]=-1;this.unusedBlossoms.push(b);};this.augmentBlossom=function(b,v){//console.log('DEBUG: augmentBlossom(' + b + ',' + v + ')');\nvar i,j;var t=v;while(this.blossomParent[t]!==b){t=this.blossomParent[t];}if(t>this.nVertex){this.augmentBlossom(t,v);}i=j=this.blossomChilds[b].indexOf(t);if(i&1){j-=this.blossomChilds[b].length;var jStep=1;var endpTrick=0;}else{jStep=-1;endpTrick=1;}while(j!==0){j+=jStep;t=this.indexW(this.blossomChilds[b],j);var p=this.indexW(this.blossomEndPs[b],j-endpTrick)^endpTrick;if(t>=this.nVertex){this.augmentBlossom(t,this.endpoint[p]);}j+=jStep;t=this.indexW(this.blossomChilds[b],j);if(t>=this.nVertex){this.augmentBlossom(t,this.endpoint[p^1]);}this.mate[this.endpoint[p]]=p^1;this.mate[this.endpoint[p^1]]=p;}//console.log('DEBUG: PAIR ' + this.endpoint[p] + ' ' + this.endpoint[p^1] + '(k=' + ~~(p/2) + ')');\nthis.blossomChilds[b]=this.blossomChilds[b].slice(i).concat(this.blossomChilds[b].slice(0,i));this.blossomEndPs[b]=this.blossomEndPs[b].slice(i).concat(this.blossomEndPs[b].slice(0,i));this.blossomBase[b]=this.blossomBase[this.blossomChilds[b][0]];//console.assert(this.blossomBase[b] === v);\n};this.augmentMatching=function(k){var v=this.edges[k][0];var w=this.edges[k][1];//console.log('DEBUG: augmentMatching(' + k + ')' + ' (v=' + v + ' ' + 'w=' + w);\n//console.log('DEBUG: PAIR ' + v + ' ' + w + '(k=' + k + ')');\nfor(var ii=0;ii<2;ii++){if(ii===0){var s=v;var p=2*k+1;}else{s=w;p=2*k;}while(true){var bs=this.inBlossom[s];//console.assert(this.label[bs] === 1);\n//console.assert(this.labelEnd[bs] === this.mate[this.blossomBase[bs]]);\nif(bs>=this.nVertex){this.augmentBlossom(bs,s);}this.mate[s]=p;if(this.labelEnd[bs]===-1)break;var t=this.endpoint[this.labelEnd[bs]];var bt=this.inBlossom[t];//console.assert(this.label[bt] === 2);\n//console.assert(this.labelEnd[bt] >= 0);\ns=this.endpoint[this.labelEnd[bt]];var j=this.endpoint[this.labelEnd[bt]^1];//console.assert(this.blossomBase[bt] === t);\nif(bt>=this.nVertex){this.augmentBlossom(bt,j);}this.mate[j]=this.labelEnd[bt];p=this.labelEnd[bt]^1;//console.log('DEBUG: PAIR ' + s + ' ' + t + '(k=' + ~~(p/2) + ')');\n}}};this.edges=edges;this.nEdge=edges.length;this.nVertexInit();this.maxWeightInit();this.endpointInit();this.neighbendInit();this.mate=this.filledArray(this.nVertex,-1);this.label=this.filledArray(2*this.nVertex,0);//remove?\nthis.labelEnd=this.filledArray(2*this.nVertex,-1);this.inBlossomInit();this.blossomParent=this.filledArray(2*this.nVertex,-1);this.blossomChilds=this.initArrArr(2*this.nVertex);this.blossomBaseInit();this.blossomEndPs=this.initArrArr(2*this.nVertex);this.bestEdge=this.filledArray(2*this.nVertex,-1);//remove?\nthis.blossomBestEdges=this.initArrArr(2*this.nVertex);//remove?\nthis.unusedBlossomsInit();this.dualVarInit();this.allowEdge=this.filledArray(this.nEdge,false);//remove?\nthis.queue=[];//remove?\n}_createClass(Edmonds,[{key:\"blossomBaseInit\",value:function blossomBaseInit(){var base=[];for(var i=0;i<this.nVertex;i++){base[i]=i;}var negs=this.filledArray(this.nVertex,-1);this.blossomBase=base.concat(negs);}},{key:\"dualVarInit\",value:function dualVarInit(){var mw=this.filledArray(this.nVertex,this.maxWeight);var zeros=this.filledArray(this.nVertex,0);this.dualVar=mw.concat(zeros);}},{key:\"unusedBlossomsInit\",value:function unusedBlossomsInit(){var i,unusedBlossoms=[];for(i=this.nVertex;i<2*this.nVertex;i++){unusedBlossoms.push(i);}this.unusedBlossoms=unusedBlossoms;}},{key:\"inBlossomInit\",value:function inBlossomInit(){var i,inBlossom=[];for(i=0;i<this.nVertex;i++){inBlossom[i]=i;}this.inBlossom=inBlossom;}},{key:\"neighbendInit\",value:function neighbendInit(){var k,i,j;var neighbend=this.initArrArr(this.nVertex);for(k=0;k<this.nEdge;k++){i=this.edges[k][0];j=this.edges[k][1];neighbend[i].push(2*k+1);neighbend[j].push(2*k);}this.neighbend=neighbend;}},{key:\"endpointInit\",value:function endpointInit(){var p;var endpoint=[];for(p=0;p<2*this.nEdge;p++){endpoint[p]=this.edges[~~(p/2)][p%2];}this.endpoint=endpoint;}},{key:\"nVertexInit\",value:function nVertexInit(){var nVertex=0;for(var k=0;k<this.nEdge;k++){var i=this.edges[k][0];var j=this.edges[k][1];if(i>=nVertex)nVertex=i+1;if(j>=nVertex)nVertex=j+1;}this.nVertex=nVertex;}},{key:\"maxWeightInit\",value:function maxWeightInit(){var maxWeight=0;for(var k=0;k<this.nEdge;k++){var weight=this.edges[k][2];if(weight>maxWeight){maxWeight=weight;}}this.maxWeight=maxWeight;}},{key:\"filledArray\",value://HELPERS//\nfunction filledArray(len,fill){var i,newArray=[];for(i=0;i<len;i++){newArray[i]=fill;}return newArray;}},{key:\"initArrArr\",value:function initArrArr(len){var arr=[];for(var i=0;i<len;i++){arr[i]=[];}return arr;}},{key:\"getMin\",value:function getMin(arr,start,end){var min=Infinity;for(var i=start;i<=end;i++){if(arr[i]<min){min=arr[i];}}return min;}},{key:\"indexW\",value:function indexW(arr,idx){//if idx is negative, go from the back\nreturn idx<0?arr[arr.length+idx]:arr[idx];}}]);return Edmonds;}();var data=[[0,1,-6],[0,2,-10],[1,2,-5],[2,3,-7],[1,3,-2]];// var edmonds = new Edmonds(data);\n// var result = edmonds.maxWeightMatching();\n// console.log(result)","map":{"version":3,"names":["Edmonds","edges","_classCallCheck","maxWeightMatching","t","nVertex","label","filledArray","bestEdge","blossomBestEdges","initArrArr","allowEdge","nEdge","queue","v","mate","inBlossom","assignLabel","augmented","length","pop","ii","neighbend","p","k","w","endpoint","kSlack","slack","base","scanBlossom","addBlossom","augmentMatching","labelEnd","b","deltaType","delta","deltaEdge","deltaBlossom","d","blossomParent","blossomBase","dualVar","Math","max","getMin","curLabel","i","j","wt","push","expandBlossom","blossomLeaves","leaves","childList","blossomChilds","leafList","apply","path","bb","bv","bw","unusedBlossoms","endPs","blossomEndPs","reverse","bestEdgeTo","nbLists","x","y","nbList","bj","be","endStage","s","jj","entryChild","indexOf","jStep","endpTrick","indexW","augmentBlossom","slice","concat","bs","bt","nVertexInit","maxWeightInit","endpointInit","neighbendInit","inBlossomInit","blossomBaseInit","unusedBlossomsInit","dualVarInit","_createClass","key","value","negs","mw","maxWeight","zeros","weight","len","fill","newArray","arr","start","end","min","Infinity","idx","data"],"sources":["/home/thomas/Dev/RouteOptimizationVisualizer/src/Blossom.js"],"sourcesContent":["export class Edmonds {\n\n    constructor(edges) {\n        this.edges = edges;\n        this.nEdge = edges.length;\n        this.nVertexInit();\n        this.maxWeightInit();\n        this.endpointInit();\n        this.neighbendInit();\n        this.mate = this.filledArray(this.nVertex, -1);\n        this.label = this.filledArray(2 * this.nVertex, 0); //remove?\n        this.labelEnd = this.filledArray(2 * this.nVertex, -1);\n        this.inBlossomInit();\n        this.blossomParent = this.filledArray(2 * this.nVertex, -1);\n        this.blossomChilds = this.initArrArr(2 * this.nVertex);\n        this.blossomBaseInit();\n        this.blossomEndPs = this.initArrArr(2 * this.nVertex);\n        this.bestEdge = this.filledArray(2 * this.nVertex, -1); //remove?\n        this.blossomBestEdges = this.initArrArr(2 * this.nVertex); //remove?\n        this.unusedBlossomsInit();\n        this.dualVarInit();\n        this.allowEdge = this.filledArray(this.nEdge, false); //remove?\n        this.queue = []; //remove?\n      }\n\n    \n     maxWeightMatching = function () {\n        for (var t = 0; t < this.nVertex; t++) {\n        //console.log('DEBUG: STAGE ' + t);\n        this.label = this.filledArray(2 * this.nVertex, 0);\n        this.bestEdge = this.filledArray(2 * this.nVertex, -1);\n        this.blossomBestEdges = this.initArrArr(2 * this.nVertex);\n        this.allowEdge = this.filledArray(this.nEdge, false);\n        this.queue = [];\n        for (var v = 0; v < this.nVertex; v++) {\n            if (this.mate[v] === -1 && this.label[this.inBlossom[v]] === 0) {\n            this.assignLabel(v, 1, -1);\n            }\n        }\n        var augmented = false;\n        while (true) {\n            //console.log('DEBUG: SUBSTAGE');\n            while (this.queue.length > 0 && !augmented) {\n            v = this.queue.pop();\n            //console.log('DEBUG: POP ', 'v=' + v);\n            //console.assert(this.label[this.inBlossom[v]] == 1);\n            for (var ii = 0; ii < this.neighbend[v].length; ii++) {\n                var p = this.neighbend[v][ii];\n                var k = ~~(p / 2);\n                var w = this.endpoint[p];\n                if (this.inBlossom[v] === this.inBlossom[w]) continue;\n                if (!this.allowEdge[k]) {\n                var kSlack = this.slack(k);\n                if (kSlack <= 0) {\n                    this.allowEdge[k] = true;\n                }\n                }\n                if (this.allowEdge[k]) {\n                if (this.label[this.inBlossom[w]] === 0) {\n                    this.assignLabel(w, 2, p ^ 1);\n                } else if (this.label[this.inBlossom[w]] === 1) {\n                    var base = this.scanBlossom(v, w);\n                    if (base >= 0) {\n                    this.addBlossom(base, k);\n                    } else {\n                    this.augmentMatching(k);\n                    augmented = true;\n                    break;\n                    }\n                } else if (this.label[w] === 0) {\n                    //console.assert(this.label[this.inBlossom[w]] === 2);\n                    this.label[w] = 2;\n                    this.labelEnd[w] = p ^ 1;\n                }\n                } else if (this.label[this.inBlossom[w]] === 1) {\n                var b = this.inBlossom[v];\n                if (this.bestEdge[b] === -1 || kSlack < this.slack(this.bestEdge[b])) {\n                    this.bestEdge[b] = k;\n                }\n                } else if (this.label[w] === 0) {\n                if (this.bestEdge[w] === -1 || kSlack < this.slack(this.bestEdge[w])) {\n                    this.bestEdge[w] = k;\n                }\n                }\n            }\n            }\n            if (augmented) break;\n            var deltaType = -1;\n            var delta = [];\n            var deltaEdge = [];\n            var deltaBlossom = [];\n            for (v = 0; v < this.nVertex; v++) {\n            if (this.label[this.inBlossom[v]] === 0 && this.bestEdge[v] !== -1) {\n                var d = this.slack(this.bestEdge[v]);\n                if (deltaType === -1 || d < delta) {\n                delta = d;\n                deltaType = 2;\n                deltaEdge = this.bestEdge[v];\n                }\n            }\n            }\n            for (b = 0; b < 2 * this.nVertex; b++) {\n            if (this.blossomParent[b] === -1 && this.label[b] === 1 && this.bestEdge[b] !== -1) {\n                kSlack = this.slack(this.bestEdge[b]);\n                ////console.assert((kSlack % 2) == 0);\n                d = kSlack / 2;\n                if (deltaType === -1 || d < delta) {\n                delta = d;\n                deltaType = 3;\n                deltaEdge = this.bestEdge[b];\n                }\n            }\n            }\n            for (b = this.nVertex; b < this.nVertex * 2; b++) {\n            if (this.blossomBase[b] >= 0 && this.blossomParent[b] === -1 && this.label[b] === 2 && (deltaType === -1 || this.dualVar[b] < delta)) {\n                delta = this.dualVar[b];\n                deltaType = 4;\n                deltaBlossom = b;\n            }\n            }\n            if (deltaType === -1) {\n            deltaType = 1;\n            delta = Math.max(0, this.getMin(this.dualVar, 0, this.nVertex - 1));\n            }\n            for (v = 0; v < this.nVertex; v++) {\n            var curLabel = this.label[this.inBlossom[v]];\n            if (curLabel === 1) {\n                this.dualVar[v] -= delta;\n            } else if (curLabel === 2) {\n                this.dualVar[v] += delta;\n            }\n            }\n            for (b = this.nVertex; b < this.nVertex * 2; b++) {\n            if (this.blossomBase[b] >= 0 && this.blossomParent[b] === -1) {\n                if (this.label[b] === 1) {\n                this.dualVar[b] += delta;\n                } else if (this.label[b] === 2) {\n                this.dualVar[b] -= delta;\n                }\n            }\n            }\n            //console.log('DEBUG: deltaType', deltaType, ' delta: ', delta);\n            if (deltaType === 1) {\n            break;\n            } else if (deltaType === 2) {\n            this.allowEdge[deltaEdge] = true;\n            var i = this.edges[deltaEdge][0];\n            var j = this.edges[deltaEdge][1];\n            var wt = this.edges[deltaEdge][2];\n            if (this.label[this.inBlossom[i]] === 0) {\n                i = i ^ j;\n                j = j ^ i;\n                i = i ^ j;\n            }\n            //console.assert(this.label[this.inBlossom[i]] == 1);\n            this.queue.push(i);\n            } else if (deltaType === 3) {\n            this.allowEdge[deltaEdge] = true;\n            i = this.edges[deltaEdge][0];\n            j = this.edges[deltaEdge][1];\n            wt = this.edges[deltaEdge][2];\n            //console.assert(this.label[this.inBlossom[i]] == 1);\n            this.queue.push(i);\n            } else if (deltaType === 4) {\n            this.expandBlossom(deltaBlossom, false);\n            }\n        }\n        if (!augmented) break;\n        for (b = this.nVertex; b < this.nVertex * 2; b++) {\n            if (this.blossomParent[b] === -1 && this.blossomBase[b] >= 0 && this.label[b] === 1 && this.dualVar[b] === 0) {\n            this.expandBlossom(b, true);\n            }\n        }\n        }\n        for (v = 0; v < this.nVertex; v++) {\n        if (this.mate[v] >= 0) {\n            this.mate[v] = this.endpoint[this.mate[v]];\n        }\n        }\n        for (v = 0; v < this.nVertex; v++) {\n        //console.assert(this.mate[v] == -1 || this.mate[this.mate[v]] == v);\n        }\n        return this.mate;\n    };\n    \n    slack = function (k) {\n        var i = this.edges[k][0];\n        var j = this.edges[k][1];\n        var wt = this.edges[k][2];\n        return this.dualVar[i] + this.dualVar[j] - 2 * wt;\n    };\n    \n    blossomLeaves = function (b) {\n        if (b < this.nVertex) {\n        return [b];\n        }\n        var leaves = [];\n        var childList = this.blossomChilds[b];\n        for (var t = 0; t < childList.length; t++) {\n        if (childList[t] <= this.nVertex) {\n            leaves.push(childList[t]);\n        } else {\n            var leafList = this.blossomLeaves(childList[t]);\n            for (var v = 0; v < leafList.length; v++) {\n            leaves.push(leafList[v]);\n            }\n        }\n        }\n        return leaves;\n    };\n    \n    assignLabel = function (w, t, p) {\n        //console.log('DEBUG: assignLabel(' + w + ',' + t + ',' + p + '}');\n        var b = this.inBlossom[w];\n        //console.assert(this.label[w] === 0 && this.label[b] === 0);\n        this.label[w] = this.label[b] = t;\n        this.labelEnd[w] = this.labelEnd[b] = p;\n        this.bestEdge[w] = this.bestEdge[b] = -1;\n        if (t === 1) {\n        this.queue.push.apply(this.queue, this.blossomLeaves(b));\n        //console.log('DEBUG: PUSH ' + this.blossomLeaves(b).toString());\n        } else if (t === 2) {\n        var base = this.blossomBase[b];\n        //console.assert(this.mate[base] >= 0);\n        this.assignLabel(this.endpoint[this.mate[base]], 1, this.mate[base] ^ 1);\n        }\n    };\n    \n    scanBlossom = function (v, w) {\n        //console.log('DEBUG: scanBlossom(' + v + ',' + w + ')');\n        var path = [];\n        var base = -1;\n        while (v !== -1 || w !== -1) {\n        var b = this.inBlossom[v];\n        if ((this.label[b] & 4)) {\n            base = this.blossomBase[b];\n            break;\n        }\n        //console.assert(this.label[b] === 1);\n        path.push(b);\n        this.label[b] = 5;\n        //console.assert(this.labelEnd[b] === this.mate[this.blossomBase[b]]);\n        if (this.labelEnd[b] === -1) {\n            v = -1;\n        } else {\n            v = this.endpoint[this.labelEnd[b]];\n            b = this.inBlossom[v];\n            //console.assert(this.label[b] === 2);\n            //console.assert(this.labelEnd[b] >= 0);\n            v = this.endpoint[this.labelEnd[b]];\n        }\n        if (w !== -1) {\n            v = v ^ w;\n            w = w ^ v;\n            v = v ^ w;\n        }\n        }\n        for (var ii = 0; ii < path.length; ii++) {\n        b = path[ii];\n        this.label[b] = 1;\n        }\n        return base;\n    };\n    \n    addBlossom = function (base, k) {\n        var v = this.edges[k][0];\n        var w = this.edges[k][1];\n        var wt = this.edges[k][2];\n        var bb = this.inBlossom[base];\n        var bv = this.inBlossom[v];\n        var bw = this.inBlossom[w];\n        var b = this.unusedBlossoms.pop();\n        //console.log('DEBUG: addBlossom(' + base + ',' + k + ')' + ' (v=' + v + ' w=' + w + ')' + ' -> ' + b);\n        this.blossomBase[b] = base;\n        this.blossomParent[b] = -1;\n        this.blossomParent[bb] = b;\n        var path = this.blossomChilds[b] = [];\n        var endPs = this.blossomEndPs[b] = [];\n        while (bv !== bb) {\n        this.blossomParent[bv] = b;\n        path.push(bv);\n        endPs.push(this.labelEnd[bv]);\n        //console.assert(this.label[bv] === 2 || (this.label[bv] === 1 && this.labelEnd[bv] === this.mate[this.blossomBase[bv]]));\n        //console.assert(this.labelEnd[bv] >= 0);\n        v = this.endpoint[this.labelEnd[bv]];\n        bv = this.inBlossom[v];\n        }\n        path.push(bb);\n        path.reverse();\n        endPs.reverse();\n        endPs.push((2 * k));\n        while (bw !== bb) {\n        this.blossomParent[bw] = b;\n        path.push(bw);\n        endPs.push(this.labelEnd[bw] ^ 1);\n        //console.assert(this.label[bw] === 2 || (this.label[bw] === 1 && this.labelEnd[bw] === this.mate[this.blossomBase[bw]]));\n        //console.assert(this.labelEnd[bw] >= 0);\n        w = this.endpoint[this.labelEnd[bw]];\n        bw = this.inBlossom[w];\n        }\n        //console.assert(this.label[bb] === 1);\n        this.label[b] = 1;\n        this.labelEnd[b] = this.labelEnd[bb];\n        this.dualVar[b] = 0;\n        var leaves = this.blossomLeaves(b);\n        for (var ii = 0; ii < leaves.length; ii++) {\n        v = leaves[ii];\n        if (this.label[this.inBlossom[v]] === 2) {\n            this.queue.push(v);\n        }\n        this.inBlossom[v] = b;\n        }\n        var bestEdgeTo = this.filledArray(2 * this.nVertex, -1);\n        for (ii = 0; ii < path.length; ii++) {\n        bv = path[ii];\n        if (this.blossomBestEdges[bv].length === 0) {\n            var nbLists = [];\n            leaves = this.blossomLeaves(bv);\n            for (var x = 0; x < leaves.length; x++) {\n            v = leaves[x];\n            nbLists[x] = [];\n            for (var y = 0; y < this.neighbend[v].length; y++) {\n                var p = this.neighbend[v][y];\n                nbLists[x].push(~~(p / 2));\n            }\n            }\n        } else {\n            nbLists = [this.blossomBestEdges[bv]];\n        }\n        //console.log('DEBUG: nbLists ' + nbLists.toString());\n        for (x = 0; x < nbLists.length; x++) {\n            var nbList = nbLists[x];\n            for (y = 0; y < nbList.length; y++) {\n            k = nbList[y];\n            var i = this.edges[k][0];\n            var j = this.edges[k][1];\n            wt = this.edges[k][2];\n            if (this.inBlossom[j] === b) {\n                i = i ^ j;\n                j = j ^ i;\n                i = i ^ j;\n            }\n            var bj = this.inBlossom[j];\n            if (bj !== b && this.label[bj] === 1 && (bestEdgeTo[bj] === -1 || this.slack(k) < this.slack(bestEdgeTo[bj]))) {\n                bestEdgeTo[bj] = k;\n            }\n            }\n        }\n        this.blossomBestEdges[bv] = [];\n        this.bestEdge[bv] = -1;\n        }\n        var be = [];\n        for (ii = 0; ii < bestEdgeTo.length; ii++) {\n        k = bestEdgeTo[ii];\n        if (k !== -1) {\n            be.push(k);\n        }\n        }\n        this.blossomBestEdges[b] = be;\n        //console.log('DEBUG: blossomBestEdges[' + b + ']= ' + this.blossomBestEdges[b].toString());\n        this.bestEdge[b] = -1;\n        for (ii = 0; ii < this.blossomBestEdges[b].length; ii++) {\n        k = this.blossomBestEdges[b][ii];\n        if (this.bestEdge[b] === -1 || this.slack(k) < this.slack(this.bestEdge[b])) {\n            this.bestEdge[b] = k;\n        }\n        }\n        //console.log('DEBUG: blossomChilds[' + b + ']= ' + this.blossomChilds[b].toString());\n    };\n    \n    expandBlossom = function (b, endStage) {\n        //console.log('DEBUG: expandBlossom(' + b + ',' + endStage + ') ' + this.blossomChilds[b].toString());\n        for (var ii = 0; ii < this.blossomChilds[b].length; ii++) {\n        var s = this.blossomChilds[b][ii];\n        this.blossomParent[s] = -1;\n        if (s < this.nVertex) {\n            this.inBlossom[s] = s;\n        } else if (endStage && this.dualVar[s] === 0) {\n            this.expandBlossom(s, endStage);\n        } else {\n            var leaves = this.blossomLeaves(s);\n            for (var jj = 0; jj < leaves.length; jj++) {\n            var v = leaves[jj];\n            this.inBlossom[v] = s;\n            }\n        }\n        }\n        if (!endStage && this.label[b] === 2) {\n        //console.assert(this.labelEnd[b] >= 0);\n        var entryChild = this.inBlossom[this.endpoint[this.labelEnd[b] ^ 1]];\n        var j = this.blossomChilds[b].indexOf(entryChild);\n        if ((j & 1)) {\n            j -= this.blossomChilds[b].length;\n            var jStep = 1;\n            var endpTrick = 0;\n        } else {\n            jStep = -1;\n            endpTrick = 1;\n        }\n        var p = this.labelEnd[b];\n        while (j !== 0) {\n            this.label[this.endpoint[p ^ 1]] = 0;\n            this.label[this.endpoint[this.indexW(this.blossomEndPs[b], j - endpTrick) ^ endpTrick ^ 1]] = 0;\n            this.assignLabel(this.endpoint[p ^ 1], 2, p);\n            this.allowEdge[~~(this.indexW(this.blossomEndPs[b], j - endpTrick) / 2)] = true;\n            j += jStep;\n            p = this.indexW(this.blossomEndPs[b], j - endpTrick) ^ endpTrick;\n            this.allowEdge[~~(p / 2)] = true;\n            j += jStep;\n        }\n        var bv = this.indexW(this.blossomChilds[b], j);\n        this.label[this.endpoint[p ^ 1]] = this.label[bv] = 2;\n    \n        this.labelEnd[this.endpoint[p ^ 1]] = this.labelEnd[bv] = p;\n        this.bestEdge[bv] = -1;\n        j += jStep;\n        while (this.indexW(this.blossomChilds[b], j) !== entryChild) {\n            bv = this.indexW(this.blossomChilds[b], j);\n            if (this.label[bv] === 1) {\n            j += jStep;\n            continue;\n            }\n            leaves = this.blossomLeaves(bv);\n            for (ii = 0; ii < leaves.length; ii++) {\n            v = leaves[ii];\n            if (this.label[v] !== 0) break;\n            }\n            if (this.label[v] !== 0) {\n            //console.assert(this.label[v] === 2);\n            //console.assert(this.inBlossom[v] === bv);\n            this.label[v] = 0;\n            this.label[this.endpoint[this.mate[this.blossomBase[bv]]]] = 0;\n            this.assignLabel(v, 2, this.labelEnd[v]);\n            }\n            j += jStep;\n        }\n        }\n        this.label[b] = this.labelEnd[b] = -1;\n        this.blossomEndPs[b] = this.blossomChilds[b] = [];\n        this.blossomBase[b] = -1;\n        this.blossomBestEdges[b] = [];\n        this.bestEdge[b] = -1;\n        this.unusedBlossoms.push(b);\n    };\n    \n    augmentBlossom = function (b, v) {\n        //console.log('DEBUG: augmentBlossom(' + b + ',' + v + ')');\n        var i, j;\n        var t = v;\n        while (this.blossomParent[t] !== b) {\n        t = this.blossomParent[t];\n        }\n        if (t > this.nVertex) {\n        this.augmentBlossom(t, v);\n        }\n        i = j = this.blossomChilds[b].indexOf(t);\n        if ((i & 1)) {\n        j -= this.blossomChilds[b].length;\n        var jStep = 1;\n        var endpTrick = 0;\n        } else {\n        jStep = -1;\n        endpTrick = 1;\n        }\n        while (j !== 0) {\n        j += jStep;\n        t = this.indexW(this.blossomChilds[b], j);\n        var p = this.indexW(this.blossomEndPs[b], j - endpTrick) ^ endpTrick;\n        if (t >= this.nVertex) {\n            this.augmentBlossom(t, this.endpoint[p]);\n        }\n        j += jStep;\n        t = this.indexW(this.blossomChilds[b], j);\n        if (t >= this.nVertex) {\n            this.augmentBlossom(t, this.endpoint[p ^ 1]);\n        }\n        this.mate[this.endpoint[p]] = p ^ 1;\n        this.mate[this.endpoint[p ^ 1]] = p;\n        }\n        //console.log('DEBUG: PAIR ' + this.endpoint[p] + ' ' + this.endpoint[p^1] + '(k=' + ~~(p/2) + ')');\n        this.blossomChilds[b] = this.blossomChilds[b].slice(i).concat(this.blossomChilds[b].slice(0, i));\n        this.blossomEndPs[b] = this.blossomEndPs[b].slice(i).concat(this.blossomEndPs[b].slice(0, i));\n        this.blossomBase[b] = this.blossomBase[this.blossomChilds[b][0]];\n        //console.assert(this.blossomBase[b] === v);\n    };\n    \n    augmentMatching = function (k) {\n        var v = this.edges[k][0];\n        var w = this.edges[k][1];\n        //console.log('DEBUG: augmentMatching(' + k + ')' + ' (v=' + v + ' ' + 'w=' + w);\n        //console.log('DEBUG: PAIR ' + v + ' ' + w + '(k=' + k + ')');\n        for (var ii = 0; ii < 2; ii++) {\n        if (ii === 0) {\n            var s = v;\n            var p = 2 * k + 1;\n        } else {\n            s = w;\n            p = 2 * k;\n        }\n        while (true) {\n            var bs = this.inBlossom[s];\n            //console.assert(this.label[bs] === 1);\n            //console.assert(this.labelEnd[bs] === this.mate[this.blossomBase[bs]]);\n            if (bs >= this.nVertex) {\n            this.augmentBlossom(bs, s);\n            }\n            this.mate[s] = p;\n            if (this.labelEnd[bs] === -1) break;\n            var t = this.endpoint[this.labelEnd[bs]];\n            var bt = this.inBlossom[t];\n            //console.assert(this.label[bt] === 2);\n            //console.assert(this.labelEnd[bt] >= 0);\n            s = this.endpoint[this.labelEnd[bt]];\n            var j = this.endpoint[this.labelEnd[bt] ^ 1];\n            //console.assert(this.blossomBase[bt] === t);\n            if (bt >= this.nVertex) {\n            this.augmentBlossom(bt, j);\n            }\n            this.mate[j] = this.labelEnd[bt];\n            p = this.labelEnd[bt] ^ 1;\n            //console.log('DEBUG: PAIR ' + s + ' ' + t + '(k=' + ~~(p/2) + ')');\n    \n    \n        }\n        }\n    };\n    \n    \n    blossomBaseInit () {\n        var base = [];\n        for (var i = 0; i < this.nVertex; i++) {\n        base[i] = i;\n        }\n        var negs = this.filledArray(this.nVertex, -1);\n        this.blossomBase = base.concat(negs);\n    };\n    dualVarInit () {\n        var mw = this.filledArray(this.nVertex, this.maxWeight);\n        var zeros = this.filledArray(this.nVertex, 0);\n        this.dualVar = mw.concat(zeros);\n    };\n    unusedBlossomsInit  () {\n        var i, unusedBlossoms = [];\n        for (i = this.nVertex; i < 2 * this.nVertex; i++) {\n        unusedBlossoms.push(i);\n        }\n        this.unusedBlossoms = unusedBlossoms;\n    };\n    inBlossomInit () {\n        var i, inBlossom = [];\n        for (i = 0; i < this.nVertex; i++) {\n        inBlossom[i] = i;\n        }\n        this.inBlossom = inBlossom;\n    };\n    neighbendInit() {\n        var k, i, j;\n        var neighbend = this.initArrArr(this.nVertex);\n        for (k = 0; k < this.nEdge; k++) {\n        i = this.edges[k][0];\n        j = this.edges[k][1];\n        neighbend[i].push(2 * k + 1);\n        neighbend[j].push(2 * k);\n        }\n        this.neighbend = neighbend;\n    };\n    endpointInit() {\n        var p;\n        var endpoint = [];\n        for (p = 0; p < 2 * this.nEdge; p++) {\n        endpoint[p] = this.edges[~~(p / 2)][p % 2];\n        }\n        this.endpoint = endpoint;\n    };\n    nVertexInit () {\n        var nVertex = 0;\n        for (var k = 0; k < this.nEdge; k++) {\n        var i = this.edges[k][0];\n        var j = this.edges[k][1];\n        if (i >= nVertex) nVertex = i + 1;\n        if (j >= nVertex) nVertex = j + 1;\n        }\n        this.nVertex = nVertex;\n    };\n    maxWeightInit() {\n        var maxWeight = 0;\n        for (var k = 0; k < this.nEdge; k++) {\n        var weight = this.edges[k][2];\n        if (weight > maxWeight) {\n            maxWeight = weight;\n        }\n        }\n        this.maxWeight = maxWeight;\n    };\n    \n    //HELPERS//\n    filledArray(len, fill) {\n        var i, newArray = [];\n        for (i = 0; i < len; i++) {\n        newArray[i] = fill;\n        }\n        return newArray;\n    }\n    \n    initArrArr(len) {\n        var arr = [];\n        for (var i = 0; i < len; i++) {\n        arr[i] = [];\n        }\n        return arr;\n    }\n    \n    getMin(arr, start, end) {\n        var min = Infinity;\n        for (var i = start; i <= end; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n        }\n        return min;\n    }\n    \n    indexW(arr, idx) {\n        //if idx is negative, go from the back\n        return idx < 0 ? arr[arr.length + idx] : arr[idx];\n    }\n}\n\n  var data = [\n    [0, 1, -6],\n    [0, 2, -10],\n    [1, 2, -5],\n    [2, 3, -7],\n    [1, 3, -2]\n  ];\n\n// var edmonds = new Edmonds(data);\n\n// var result = edmonds.maxWeightMatching();\n\n// console.log(result)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Desktop/GIT_Projects/RouteOptimizationVisualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './App.css';\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport sketch from \"./sketch.js\";\nimport Select from \"react-select\";\nimport ReactSlider from \"react-slider\";\nimport 'rc-slider/assets/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [addingNodes, setAddingNodes] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [clearingBoard, setClearingBoard] = useState(false);\n  //const algo = 'Nearest Neighbor';\n  const [algo, setSelectedAlgo] = useState(\"Not Selected\");\n  const [speed, setSpeed] = useState(5);\n  const algoOptions = [{\n    value: \"0\",\n    label: \"Select Algorithm\"\n  }, {\n    value: \"1\",\n    label: \"Nearest Insertion\"\n  }, {\n    value: \"2\",\n    label: \"Farthest Insertion\"\n  }, {\n    value: \"3\",\n    label: \"Nearest Neighbor\"\n  }, {\n    value: \"4\",\n    label: \"Nearest Neighbor Look Ahead (made up)\"\n  }, {\n    value: \"5\",\n    label: \"Brute Force\"\n  },\n  // { value: \"6\", label: \"Cluster naively\" },\n  {\n    value: \"6\",\n    label: \"MST\"\n  }];\n  const handleAlgoSelect = e => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setSelectedAlgo(e.label);\n  };\n  const handleSpeedSelect = value => {\n    setIsRunning(false);\n    setSpeed(value);\n  };\n  const text = \"Run Algorithm\";\n  changeText = () => {\n    if ({\n      text\n    } == \"Run Algorithm\") this.setState(\"Remove Edges\");else this.setState(\"Run Algorithm\");\n  };\n\n  //in the beginning we click the AddNodesButton 2, because of weird bug that it only works after clicking at least once\n  const btn = useRef();\n  useEffect(() => {\n    btn.current.click();\n    setTimeout(() => btn.current.click(), 3);\n  }, []); //setTimeout(() => {console.log('ha'); inputRef.current.handleClick() ; setAddingNodes(false); },2000);}, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__container\",\n        children: /*#__PURE__*/_jsxDEV(\"h\", {\n          id: \"banner\",\n          children: \"Route Optimization Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown\",\n        options: algoOptions,\n        onChange: handleAlgoSelect,\n        value: algoOptions.find(function (option) {\n          return option.value === algo;\n        }),\n        defaultValue: {\n          label: \"Select Algorithm\",\n          value: 0\n        },\n        label: \"Single select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"slider-label\",\n        children: \"Chose speed by sliding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: \"slider\",\n        ariaLabelledby: \"slider-label\",\n        thumbClassName: \"example-thumb\",\n        trackClassName: \"example-track\",\n        max: 50,\n        renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...props,\n          children: state.valueNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 40\n        }, this),\n        defaultValue: 5,\n        onChange: handleSpeedSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Canvas\",\n        children: /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n          sketch: sketch,\n          addingNodes: addingNodes,\n          isRunning: isRunning,\n          clearinBoard: clearingBoard,\n          algo: algo,\n          speed: speed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: btn,\n        className: \"AddNodesButton\",\n        onClick: () => {\n          setAddingNodes(!addingNodes);\n          setIsRunning(false);\n          setClearingBoard(false);\n        },\n        children: addingNodes ? 'Stop adding Nodes' : 'Add Nodes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunAlgoButton\",\n        onClick: () => {\n          setAddingNodes(false);\n          setIsRunning(!isRunning);\n          setClearingBoard(false);\n          this.changeText();\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ClearBoardButton\",\n        onClick: () => {\n          setAddingNodes(false);\n          setIsRunning(false);\n          setClearingBoard(!clearingBoard);\n        },\n        children: \"Clear Bord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"aj2i1A6hkjfnZWK3ywEGMCRyGy8=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactP5Wrapper","sketch","Select","ReactSlider","App","addingNodes","setAddingNodes","isRunning","setIsRunning","clearingBoard","setClearingBoard","algo","setSelectedAlgo","speed","setSpeed","algoOptions","value","label","handleAlgoSelect","e","handleSpeedSelect","text","changeText","setState","btn","current","click","setTimeout","find","option","props","state","valueNow"],"sources":["/home/thomas/Desktop/GIT_Projects/RouteOptimizationVisualizer/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport './App.css';\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport sketch from \"./sketch.js\";\nimport Select from \"react-select\";\nimport ReactSlider from \"react-slider\";\nimport 'rc-slider/assets/index.css';\n\nexport function App() {\n\n\n  const [addingNodes, setAddingNodes] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [clearingBoard, setClearingBoard] = useState(false);\n  //const algo = 'Nearest Neighbor';\n  const [algo, setSelectedAlgo] = useState(\"Not Selected\");\n  const [speed, setSpeed] = useState(5);\n  const algoOptions = [\n    { value: \"0\", label: \"Select Algorithm\" },\n    { value: \"1\", label: \"Nearest Insertion\" },\n    { value: \"2\", label: \"Farthest Insertion\" },\n    { value: \"3\", label: \"Nearest Neighbor\" },\n    { value: \"4\", label: \"Nearest Neighbor Look Ahead (made up)\" },\n    { value: \"5\", label: \"Brute Force\" },\n   // { value: \"6\", label: \"Cluster naively\" },\n    { value: \"6\", label: \"MST\" }\n  ];\n  const handleAlgoSelect = (e) => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setSelectedAlgo(e.label);\n  };\n  const handleSpeedSelect = (value) => {\n    setIsRunning(false);\n    setSpeed(value);\n  };\n  const text = \"Run Algorithm\";\n\n  changeText = () => {\n    if ({text} == \"Run Algorithm\")\n      this.setState(\"Remove Edges\"); \n    else \n      this.setState(\"Run Algorithm\");\n  } \n\n\n  //in the beginning we click the AddNodesButton 2, because of weird bug that it only works after clicking at least once\n  const btn =useRef();\n  useEffect(() => {btn.current.click(); setTimeout(() => btn.current.click(), 3);},[]); //setTimeout(() => {console.log('ha'); inputRef.current.handleClick() ; setAddingNodes(false); },2000);}, []);\n  \n  return (\n    <>\n    \n    <div className=\"banner\">\n      <div className=\"banner__container\">\n        <h id=\"banner\">Route Optimization Visualizer</h>\n      </div>\n    </div>\n\n      \n      <div className = \"dropdownContainer\"> \n        <Select className = \"dropdown\"\n          options={algoOptions}\n          onChange={handleAlgoSelect}        \n          value={algoOptions.find(function (option) {\n            return option.value === algo;\n          })}\n          defaultValue={{ label: \"Select Algorithm\", value: 0 }}\n          label=\"Single select\"\n        />\n      </div>\n\n\n      <div className = \"sliderContainer\">\n      <label id=\"slider-label\">Chose speed by sliding</label>\n        <ReactSlider className = \"slider\"\n        ariaLabelledby=\"slider-label\"\n        thumbClassName=\"example-thumb\"\n        trackClassName=\"example-track\"\n        max = {50}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        defaultValue= {5}\n        onChange ={handleSpeedSelect}\n        />\n      </div>\n    \n\n    <div className = \"Main\">\n      <div className=\"Canvas\">\n        <ReactP5Wrapper sketch={sketch} addingNodes = {addingNodes} isRunning = {isRunning} clearinBoard = {clearingBoard} algo = {algo} speed = {speed} /> \n      </div>\n    </div>\n\n  \n    <div className = \"Buttons\">\n      <button ref = {btn} className = \"AddNodesButton\" \n        onClick={()=>{\n                  setAddingNodes(!addingNodes);\n                  setIsRunning(false);\n                  setClearingBoard(false);\n                  } }>\n                    {addingNodes ? 'Stop adding Nodes' : 'Add Nodes'}\n        </button>\n        <button className = \"RunAlgoButton\" \n                onClick={()=>{\n                  setAddingNodes(false);\n                  setIsRunning(!isRunning);\n                  setClearingBoard(false);\n                  this.changeText();\n                  } }>\n                    {text}\n        </button>\n        <button className = \"ClearBoardButton\" \n                onClick={()=>{\n                  setAddingNodes(false);\n                  setIsRunning(false);\n                  setClearingBoard(!clearingBoard);\n                } }>\n          Clear Bord\n        </button>\n      </div>\n      \n    </>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Dev/RouteOptimizationVisualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./App.css\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport sketch from \"./sketch\";\nimport Select from \"react-select\";\nimport ReactSlider from \"react-slider\";\nimport \"rc-slider/assets/index.css\";\nimport playButton from \"./icons8-spielen-100.png\";\nimport pauseButton from \"./icons8-stop-100.png\";\n\n// Option arrays for the dropdowns are defined outside the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst algoOptions = [{\n  value: \"0\",\n  label: \"Select Algorithm\"\n}, {\n  value: \"1\",\n  label: \"Nearest Insertion\"\n}, {\n  value: \"2\",\n  label: \"Farthest Insertion\"\n}, {\n  value: \"3\",\n  label: \"Nearest Neighbor\"\n}, {\n  value: \"4\",\n  label: \"Nearest Neighbor Look Ahead (made up)\"\n}, {\n  value: \"5\",\n  label: \"Brute Force\"\n}, {\n  value: \"7\",\n  label: \"Christofides\"\n}];\nconst localSearchOptions = [{\n  value: \"0\",\n  label: \"Select Algorithm\"\n}, {\n  value: \"1\",\n  label: \"2-opt\"\n}, {\n  value: \"2\",\n  label: \"3-opt\"\n}];\nexport function App() {\n  _s();\n  // State declarations\n  const [addingNodes, setAddingNodes] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [clearingBoard, setClearingBoard] = useState(false);\n  const [selectedAlgo, setSelectedAlgo] = useState(algoOptions[0]);\n  const [selectedLocalSearch, setSelectedLocalSearch] = useState(localSearchOptions[0]);\n  const [speed, setSpeed] = useState(5);\n  const [pathToPic, setPathToPic] = useState(playButton);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [runAlgoText, setRunAlgoText] = useState(\"Run Algorithm\");\n  const [localSearchText, setLocalSearchText] = useState(\"Run Algorithm\");\n  const [removeEdges, setRemoveEdges] = useState(false);\n\n  // Ref for the Add Nodes button workaround\n  const addNodesButtonRef = useRef(null);\n\n  // Helper delay function that scales with the current speed\n  const delay = useCallback(time => new Promise(resolve => setTimeout(resolve, time / speed)), [speed]);\n\n  // Handlers for the dropdowns\n  const handleAlgoSelect = option => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setSelectedAlgo(option);\n  };\n  const handleLocalSearchSelect = option => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setSelectedLocalSearch(option);\n  };\n\n  // Handler for the speed slider\n  const handleSpeedSelect = value => {\n    setIsRunning(false);\n    setSpeed(value);\n  };\n\n  // Play/Pause handling\n  const handleSetIsPlaying = playing => {\n    setIsPlaying(playing);\n    setPathToPic(playing ? pauseButton : playButton);\n  };\n  const handleIsPlayingInP5 = playing => {\n    handleSetIsPlaying(playing);\n  };\n\n  // Button Handlers\n  const handleAddNodesButton = () => {\n    setAddingNodes(prev => !prev);\n    setIsRunning(false);\n    setClearingBoard(false);\n  };\n  const handleRunAlgoButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    if (runAlgoText === \"Run Algorithm\") {\n      setRemoveEdges(false);\n      setIsRunning(true);\n      setRunAlgoText(\"Remove Edges\");\n      setLocalSearchText(\"Run local search\");\n      setPathToPic(pauseButton);\n    } else {\n      setPathToPic(playButton);\n      setRemoveEdges(true);\n      setIsRunning(false);\n      setRunAlgoText(\"Run Algorithm\");\n      setLocalSearchText(\"Run Algorithm\");\n    }\n    await delay(500);\n    setIsRunning(false);\n  };\n  const handleLocalSearchButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    setRemoveEdges(false);\n    setIsRunning(true);\n    setPathToPic(pauseButton);\n    if (localSearchText === \"Run Algorithm\") {\n      setLocalSearchText(\"Run local search\");\n    }\n    if (runAlgoText === \"Run Algorithm\") {\n      setRunAlgoText(\"Remove Edges\");\n    }\n    await delay(500);\n    setIsRunning(false);\n  };\n  const handleClickInputButton = async () => {\n    // Toggle the playing state\n    handleSetIsPlaying(!isPlaying);\n  };\n\n  // Workaround for a bug with adding nodes: the button is programmatically clicked twice on mount.\n  useEffect(() => {\n    if (addNodesButtonRef.current) {\n      addNodesButtonRef.current.click();\n      setTimeout(() => {\n        addNodesButtonRef.current.click();\n      }, 3);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"banner\",\n          children: \"Route Optimization Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown\",\n        options: algoOptions,\n        onChange: handleAlgoSelect,\n        value: selectedAlgo,\n        defaultValue: algoOptions[0],\n        label: \"Select Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown\",\n        options: localSearchOptions,\n        onChange: handleLocalSearchSelect,\n        value: selectedLocalSearch,\n        defaultValue: localSearchOptions[0],\n        label: \"Select Local Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"speed-slider\",\n        id: \"slider-label\",\n        children: \"Choose speed by sliding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        id: \"speed-slider\",\n        className: \"slider\",\n        ariaLabelledby: \"slider-label\",\n        thumbClassName: \"example-thumb\",\n        trackClassName: \"example-track\",\n        max: 50,\n        defaultValue: 5,\n        renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...props,\n          children: state.valueNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 42\n        }, this),\n        onChange: handleSpeedSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Canvas\",\n        children: /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n          className: \"p5Canvas\",\n          sketch: sketch,\n          addingNodes: addingNodes,\n          isRunning: isRunning,\n          clearingBoard: clearingBoard,\n          algo: selectedAlgo,\n          speed: speed,\n          removeEdges: removeEdges,\n          localSearch: selectedLocalSearch,\n          isPlaying: isPlaying,\n          setIsPlaying: handleIsPlayingInP5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: addNodesButtonRef,\n        className: \"RunButton\",\n        onClick: handleAddNodesButton,\n        children: addingNodes ? \"Stop adding Nodes\" : \"Add Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunButton\",\n        onClick: handleRunAlgoButton,\n        children: runAlgoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunButton\",\n        onClick: handleLocalSearchButton,\n        children: localSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RunButton\",\n        onClick: () => {\n          setAddingNodes(false);\n          setIsRunning(false);\n          setClearingBoard(prev => !prev);\n        },\n        children: \"Clear Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PlayButton\",\n        onClick: handleClickInputButton,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pathToPic,\n          alt: isPlaying ? \"Pause\" : \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"NV7/18f8R4E33aaosGgJngqwnoU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","ReactP5Wrapper","sketch","Select","ReactSlider","playButton","pauseButton","algoOptions","value","label","localSearchOptions","App","addingNodes","setAddingNodes","isRunning","setIsRunning","clearingBoard","setClearingBoard","selectedAlgo","setSelectedAlgo","selectedLocalSearch","setSelectedLocalSearch","speed","setSpeed","pathToPic","setPathToPic","isPlaying","setIsPlaying","runAlgoText","setRunAlgoText","localSearchText","setLocalSearchText","removeEdges","setRemoveEdges","addNodesButtonRef","delay","time","Promise","resolve","setTimeout","handleAlgoSelect","option","handleLocalSearchSelect","handleSpeedSelect","handleSetIsPlaying","playing","handleIsPlayingInP5","handleAddNodesButton","prev","handleRunAlgoButton","handleLocalSearchButton","handleClickInputButton","current","click","props","state","valueNow"],"sources":["/home/thomas/Dev/RouteOptimizationVisualizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./App.css\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport sketch from \"./sketch\";\nimport Select from \"react-select\";\nimport ReactSlider from \"react-slider\";\nimport \"rc-slider/assets/index.css\";\nimport playButton from \"./icons8-spielen-100.png\";\nimport pauseButton from \"./icons8-stop-100.png\";\n\n// Option arrays for the dropdowns are defined outside the component\nconst algoOptions = [\n  { value: \"0\", label: \"Select Algorithm\" },\n  { value: \"1\", label: \"Nearest Insertion\" },\n  { value: \"2\", label: \"Farthest Insertion\" },\n  { value: \"3\", label: \"Nearest Neighbor\" },\n  { value: \"4\", label: \"Nearest Neighbor Look Ahead (made up)\" },\n  { value: \"5\", label: \"Brute Force\" },\n  { value: \"7\", label: \"Christofides\" },\n];\n\nconst localSearchOptions = [\n  { value: \"0\", label: \"Select Algorithm\" },\n  { value: \"1\", label: \"2-opt\" },\n  { value: \"2\", label: \"3-opt\" },\n];\n\nexport function App() {\n  // State declarations\n  const [addingNodes, setAddingNodes] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [clearingBoard, setClearingBoard] = useState(false);\n  const [selectedAlgo, setSelectedAlgo] = useState(algoOptions[0]);\n  const [selectedLocalSearch, setSelectedLocalSearch] = useState(localSearchOptions[0]);\n  const [speed, setSpeed] = useState(5);\n  const [pathToPic, setPathToPic] = useState(playButton);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [runAlgoText, setRunAlgoText] = useState(\"Run Algorithm\");\n  const [localSearchText, setLocalSearchText] = useState(\"Run Algorithm\");\n  const [removeEdges, setRemoveEdges] = useState(false);\n\n  // Ref for the Add Nodes button workaround\n  const addNodesButtonRef = useRef(null);\n\n  // Helper delay function that scales with the current speed\n  const delay = useCallback(\n    (time) => new Promise((resolve) => setTimeout(resolve, time / speed)),\n    [speed]\n  );\n\n  // Handlers for the dropdowns\n  const handleAlgoSelect = (option) => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setSelectedAlgo(option);\n  };\n\n  const handleLocalSearchSelect = (option) => {\n    setAddingNodes(false);\n    setIsRunning(false);\n    setSelectedLocalSearch(option);\n  };\n\n  // Handler for the speed slider\n  const handleSpeedSelect = (value) => {\n    setIsRunning(false);\n    setSpeed(value);\n  };\n\n  // Play/Pause handling\n  const handleSetIsPlaying = (playing) => {\n    setIsPlaying(playing);\n    setPathToPic(playing ? pauseButton : playButton);\n  };\n\n  const handleIsPlayingInP5 = (playing) => {\n    handleSetIsPlaying(playing);\n  };\n\n  // Button Handlers\n  const handleAddNodesButton = () => {\n    setAddingNodes((prev) => !prev);\n    setIsRunning(false);\n    setClearingBoard(false);\n  };\n\n  const handleRunAlgoButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    if (runAlgoText === \"Run Algorithm\") {\n      setRemoveEdges(false);\n      setIsRunning(true);\n      setRunAlgoText(\"Remove Edges\");\n      setLocalSearchText(\"Run local search\");\n      setPathToPic(pauseButton);\n    } else {\n      setPathToPic(playButton);\n      setRemoveEdges(true);\n      setIsRunning(false);\n      setRunAlgoText(\"Run Algorithm\");\n      setLocalSearchText(\"Run Algorithm\");\n    }\n    await delay(500);\n    setIsRunning(false);\n  };\n\n  const handleLocalSearchButton = async () => {\n    setAddingNodes(false);\n    setClearingBoard(false);\n    setRemoveEdges(false);\n    setIsRunning(true);\n    setPathToPic(pauseButton);\n\n    if (localSearchText === \"Run Algorithm\") {\n      setLocalSearchText(\"Run local search\");\n    }\n    if (runAlgoText === \"Run Algorithm\") {\n      setRunAlgoText(\"Remove Edges\");\n    }\n\n    await delay(500);\n    setIsRunning(false);\n  };\n\n  const handleClickInputButton = async () => {\n    // Toggle the playing state\n    handleSetIsPlaying(!isPlaying);\n  };\n\n  // Workaround for a bug with adding nodes: the button is programmatically clicked twice on mount.\n  useEffect(() => {\n    if (addNodesButtonRef.current) {\n      addNodesButtonRef.current.click();\n      setTimeout(() => {\n        addNodesButtonRef.current.click();\n      }, 3);\n    }\n  }, []);\n\n  return (\n    <>\n      <header className=\"banner\">\n        <div className=\"banner__container\">\n          <h1 id=\"banner\">Route Optimization Visualizer</h1>\n        </div>\n      </header>\n\n      <div className=\"dropdownContainer\">\n        <Select\n          className=\"dropdown\"\n          options={algoOptions}\n          onChange={handleAlgoSelect}\n          value={selectedAlgo}\n          defaultValue={algoOptions[0]}\n          label=\"Select Algorithm\"\n        />\n      </div>\n\n      <div className=\"dropdownContainer\">\n        <Select\n          className=\"dropdown\"\n          options={localSearchOptions}\n          onChange={handleLocalSearchSelect}\n          value={selectedLocalSearch}\n          defaultValue={localSearchOptions[0]}\n          label=\"Select Local Search\"\n        />\n      </div>\n\n      <div className=\"sliderContainer\">\n        <label htmlFor=\"speed-slider\" id=\"slider-label\">\n          Choose speed by sliding\n        </label>\n        <ReactSlider\n          id=\"speed-slider\"\n          className=\"slider\"\n          ariaLabelledby=\"slider-label\"\n          thumbClassName=\"example-thumb\"\n          trackClassName=\"example-track\"\n          max={50}\n          defaultValue={5}\n          renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n          onChange={handleSpeedSelect}\n        />\n      </div>\n\n      <main className=\"Main\">\n        <div className=\"Canvas\">\n          <ReactP5Wrapper\n            className=\"p5Canvas\"\n            sketch={sketch}\n            addingNodes={addingNodes}\n            isRunning={isRunning}\n            clearingBoard={clearingBoard}\n            algo={selectedAlgo}\n            speed={speed}\n            removeEdges={removeEdges}\n            localSearch={selectedLocalSearch}\n            isPlaying={isPlaying}\n            setIsPlaying={handleIsPlayingInP5}\n          />\n        </div>\n      </main>\n\n      <div className=\"Buttons\">\n        <button\n          ref={addNodesButtonRef}\n          className=\"RunButton\"\n          onClick={handleAddNodesButton}\n        >\n          {addingNodes ? \"Stop adding Nodes\" : \"Add Nodes\"}\n        </button>\n        <button className=\"RunButton\" onClick={handleRunAlgoButton}>\n          {runAlgoText}\n        </button>\n        <button className=\"RunButton\" onClick={handleLocalSearchButton}>\n          {localSearchText}\n        </button>\n        <button\n          className=\"RunButton\"\n          onClick={() => {\n            setAddingNodes(false);\n            setIsRunning(false);\n            setClearingBoard((prev) => !prev);\n          }}\n        >\n          Clear Board\n        </button>\n        <button className=\"PlayButton\" onClick={handleClickInputButton}>\n          <img src={pathToPic} alt={isPlaying ? \"Pause\" : \"Play\"} />\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
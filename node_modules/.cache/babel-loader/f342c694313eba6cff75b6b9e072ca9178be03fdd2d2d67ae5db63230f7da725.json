{"ast":null,"code":"var richTypes = {\n  Date: true,\n  RegExp: true,\n  String: true,\n  Number: true\n};\nexport default function diff(obj, newObj) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    cyclesFix: true\n  };\n  var _stack = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var diffs = [];\n  var isObjArray = Array.isArray(obj);\n  var _loop = function _loop() {\n    var objKey = obj[key];\n    var path = isObjArray ? +key : key;\n    if (!(key in newObj)) {\n      diffs.push({\n        type: \"REMOVE\",\n        path: [path],\n        oldValue: obj[key]\n      });\n      return \"continue\";\n    }\n    var newObjKey = newObj[key];\n    var areObjects = typeof objKey === \"object\" && typeof newObjKey === \"object\";\n    if (objKey && newObjKey && areObjects && !richTypes[Object.getPrototypeOf(objKey).constructor.name] && (!options.cyclesFix || !_stack.includes(objKey))) {\n      var nestedDiffs = diff(objKey, newObjKey, options, options.cyclesFix ? _stack.concat([objKey]) : []);\n      diffs.push.apply(diffs, nestedDiffs.map(function (difference) {\n        difference.path.unshift(path);\n        return difference;\n      }));\n    } else if (objKey !== newObjKey && !(areObjects && (isNaN(objKey) ? objKey + \"\" === newObjKey + \"\" : +objKey === +newObjKey))) {\n      diffs.push({\n        path: [path],\n        type: \"CHANGE\",\n        value: newObjKey,\n        oldValue: objKey\n      });\n    }\n  };\n  for (var key in obj) {\n    var _ret = _loop();\n    if (_ret === \"continue\") continue;\n  }\n  var isNewObjArray = Array.isArray(newObj);\n  for (var _key in newObj) {\n    if (!(_key in obj)) {\n      diffs.push({\n        type: \"CREATE\",\n        path: [isNewObjArray ? +_key : _key],\n        value: newObj[_key]\n      });\n    }\n  }\n  return diffs;\n}","map":{"version":3,"names":["richTypes","Date","RegExp","String","Number","diff","obj","newObj","options","arguments","length","undefined","cyclesFix","_stack","diffs","isObjArray","Array","isArray","_loop","objKey","key","path","push","type","oldValue","newObjKey","areObjects","Object","getPrototypeOf","constructor","name","includes","nestedDiffs","concat","apply","map","difference","unshift","isNaN","value","_ret","isNewObjArray"],"sources":["/home/thomas/Dev/RouteOptimizationVisualizer/node_modules/microdiff/dist/index.js"],"sourcesContent":["const richTypes = { Date: true, RegExp: true, String: true, Number: true };\nexport default function diff(\n\tobj,\n\tnewObj,\n\toptions = { cyclesFix: true },\n\t_stack = []\n) {\n\tlet diffs = [];\n\tconst isObjArray = Array.isArray(obj);\n\tfor (const key in obj) {\n\t\tconst objKey = obj[key];\n\t\tconst path = isObjArray ? +key : key;\n\t\tif (!(key in newObj)) {\n\t\t\tdiffs.push({\n\t\t\t\ttype: \"REMOVE\",\n\t\t\t\tpath: [path],\n\t\t\t\toldValue: obj[key],\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\tconst newObjKey = newObj[key];\n\t\tconst areObjects =\n\t\t\ttypeof objKey === \"object\" && typeof newObjKey === \"object\";\n\t\tif (\n\t\t\tobjKey &&\n\t\t\tnewObjKey &&\n\t\t\tareObjects &&\n\t\t\t!richTypes[Object.getPrototypeOf(objKey).constructor.name] &&\n\t\t\t(!options.cyclesFix || !_stack.includes(objKey))\n\t\t) {\n\t\t\tconst nestedDiffs = diff(\n\t\t\t\tobjKey,\n\t\t\t\tnewObjKey,\n\t\t\t\toptions,\n\t\t\t\toptions.cyclesFix ? _stack.concat([objKey]) : []\n\t\t\t);\n\t\t\tdiffs.push.apply(\n\t\t\t\tdiffs,\n\t\t\t\tnestedDiffs.map((difference) => {\n\t\t\t\t\tdifference.path.unshift(path);\n\t\t\t\t\treturn difference;\n\t\t\t\t})\n\t\t\t);\n\t\t} else if (\n\t\t\tobjKey !== newObjKey &&\n\t\t\t!(\n\t\t\t\tareObjects &&\n\t\t\t\t(isNaN(objKey)\n\t\t\t\t\t? objKey + \"\" === newObjKey + \"\"\n\t\t\t\t\t: +objKey === +newObjKey)\n\t\t\t)\n\t\t) {\n\t\t\tdiffs.push({\n\t\t\t\tpath: [path],\n\t\t\t\ttype: \"CHANGE\",\n\t\t\t\tvalue: newObjKey,\n\t\t\t\toldValue: objKey,\n\t\t\t});\n\t\t}\n\t}\n\tconst isNewObjArray = Array.isArray(newObj);\n\tfor (const key in newObj) {\n\t\tif (!(key in obj)) {\n\t\t\tdiffs.push({\n\t\t\t\ttype: \"CREATE\",\n\t\t\t\tpath: [isNewObjArray ? +key : key],\n\t\t\t\tvalue: newObj[key],\n\t\t\t});\n\t\t}\n\t}\n\treturn diffs;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}